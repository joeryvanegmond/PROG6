@model BOEF.Models.ViewModels.BoekingVM

<h2>Beestje boeken</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="progress" style="background-color:lightgrey;">
            <div class="progress-bar progress-bar-info active" role="progressbar" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100" style="width:75%;">
                Gegevens invoeren.
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container">
            <div class="row">
                <div class="col-md-7">
                    <div class="card">
                        <div class="card-header">
                            <div>
                                <h4>Stap 4: Vul je gegevens in</h4>
                            </div>
                        </div>
                        <div class="card-body">

                            <div class="form-group">
                                @Html.LabelFor(model => model.Customer.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Customer.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Customer.Firstname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Customer.Infix, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Customer.Infix, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Customer.Infix, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Customer.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Customer.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Customer.Lastname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Customer.Adress, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Customer.Adress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Customer.Adress, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Customer.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Customer.Mail, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Customer.Mail, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Customer.Telephone, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Customer.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Customer.Telephone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-5">
                    <div class="card">
                        <div class="card-header">

                            <div>
                                <h4>Boeking</h4>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-12">
                                    @Model.Date
                                </div>
                                <div class="col-md-12">
                                    <hr />
                                    <h6>Beestjes</h6>
                                    @if (Model.SelectedBeests.Count != 0)
                                    {
                                        foreach (var item in Model.SelectedBeests)
                                        {
                                            <img src="@Url.Content(item.Value)" width="50" />
                                        }

                                    }
                                    else
                                    {
                                        <p>Nog geen beestjes geselecteerd</p>
                                    }
                                </div>
                                <div class="col-md-12">
                                    <hr />
                                    <h6>Accessoires</h6>
                                    @if (Model.Accessoires.Count != 0)
                                    {
                                        foreach (var item in Model.SelectedAccessoires.Keys)
                                        {
                                            <div class="col-md-4">
                                                <div class="text-center">
                                                    <img src="@Url.Content(item.AccessoireImage.ImagePath)" width="50" alt="@item.AccessoireImage.Name" />
                                                    <p>@item.Name</p>

                                                </div>
                                            </div>

                                        }
                                    }
                                    else
                                    {
                                        <p>Geen accessoires gekozen.</p>
                                    }
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Ga naar bevestigen" class="btn btn-default" />
        </div>
    </div>
}
